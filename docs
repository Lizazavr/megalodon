Модуль x_win
Метод tictacoe_x
Тест №1
Цель: проверить корректность работы программы при победе игрока Х по горизонтали
Тип: положительный
Входные данные: select[] = {1,4,3,7,2}
Ожидаемый результат: вывод программы – «The first player won the game!!!»
Тест №2
Цель: проверить корректность работы программы при победе игрока Х по вертикали
Тип: положительный
Входные данные: select[] = {2,4,5,1,8}
Ожидаемый результат: вывод программы – «The first player won the game!!!»

Тест №3
Цель: проверить корректность работы программы при победе игрока Х по диагонали
Тип: положительный
Входные данные: select[] = {3,2,5,6,7}
Ожидаемый результат: вывод программы – «The first player won the game!!!»

Модуль o_win
Метод tictacoe_o
Тест №1
Цель: проверить корректность работы программы при победе игрока Х по горизонтали
Тип: положительный
Входные данные: select[] = {4,1,9,3,7,8,5,2}
Ожидаемый результат: вывод программы – «The second player won the game!!!»
Тест №2
Цель: проверить корректность работы программы при победе игрока Х по вертикали
Тип: положительный
Входные данные: select[] = {2,5,1,3,8,9,7,6}
Ожидаемый результат: вывод программы – «The second player won the game!!!»

Тест №3
Цель: проверить корректность работы программы при победе игрока Х по диагонали
Тип: положительный
Входные данные: select[] = {2,1,6,5,8,9}
Ожидаемый результат: вывод программы – «The second player won the game!!!»

Модуль draw
Метод tictacoe_draw
Тест №1
Цель: проверить работу программы при ничьей
Тип: положительный
Входные данные: select[] = [5,7,9,1,4,6,8,2,3]
Ожидаемый результат: вывод программы – «Draw!!!»


Модуль minus
Метод tictacoe_minus
Тест №1
Цель: проверить работу программы при ничьей
Тип: положительный
Входные данные: select[] = [10]
Ожидаемый результат: вывод программы – «Impossible move»

Тест №2
Цель: проверить вывод программы при ситуации, в которой не может быть победителя
Входные данные: select[] = [7,6,5]
Ожидаемый результат: вывод программы – «It is impossible to identify the winner»



